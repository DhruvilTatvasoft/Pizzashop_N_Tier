@model ItemModel
<partial name="_ValidationScriptsPartial" />
<div class="d-flex justify-content-between p-2 ps-4">
  <label class=" c-text" style="font-size:15px;">Modifier Groups</label>
  <button type="button" class="col-6 d-flex w-25" data-bs-toggle="modal" data-bs-target="#addModifierGroup1"
    style="background: transparent;border: none;margin-left: auto;"><img src="~/images/add_8600182.png"
      style="width:75%;margin-top: 5px;" alt="">
  </button>
</div>
<div class="scrollbar w-100">
  <div class="scrollbox w-100 h-100">
    <ul class="categorylist mt-2 w-100 h-100 ">

      @foreach (var ModifierGroup in Model.modifiergroups)
      {
        <li class="w-100">
          <label for="" class="ms-0" style="font-size: 13px;"
            onclick="loadModifiersForModifierGroup(@ModifierGroup.Modifiergroupid)">â‰£
            @ModifierGroup.Modifiergroupname</label>

          <div class="d-flex" style="margin-left:auto;">
            <img src="~/images/edit.png" class="pe-2" style="width:25px;cursor:pointer;"
              onclick="EditModifierGroupGet(@ModifierGroup.Modifiergroupid)" alt="">
            <img src="~/images/trash-fill.svg" style="width:15px;cursor:pointer;"
              onclick="openDeleteModifierModel(@ModifierGroup.Modifiergroupid)" alt="">
          </div>
        </li>
      }
    </ul>
  </div>
</div>

<form id="newModifierGroup">
  <div class="modal fade" id="addModifierGroup1" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header" style="border:none;">
          <h5 class="modal-title" id="exampleModalLabel">Add New Modifiergroup</h5>
          <button type="button" class="close" data-bs-dismiss="modal" style="
    margin-left: auto;
    border: none;
    background: none;
" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">

          <div class="form-group mb-2">
            <input type="text" class="form-control h-100" asp-for="mg.Modifiergroupname" placeholder="Name*"
              id="modifierGroup-Name">
            @* <!-- #region >--> *@
            <span asp-validation-for="mg.Modifiergroupname" class="text-danger"></span>
          </div>
          <div class="form-group">
            <textarea class="form-control h-100" placeholder="Description" asp-for="mg.Description"
              id="Modifier-description"></textarea>
            <span asp-validation-for="mg.Modifiergroupname" class="text-danger"></span>
          </div>
          <div class="mt-2">
            <a href="#" data-bs-toggle="modal" data-bs-target="#addExistingModifiers" onclick="loadModifiers()"><label
                for="" class="text-primary" style="font-weight: 400;">+ Add existing modifiers</label></a>
            <div class="addedModifiers d-flex">
            </div>
          </div>
        </div>
        <div class="modal-footer" style="border: none;">
          <button type="submit" class="btn btn-primary">Add</button>
          <button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal"
            onclick="cancelfromAddModifiers()">Cancel</button>
        </div>
      </div>
    </div>
  </div>
</form>

<div id="LoadPartialOfmodifiergroup"></div>

<div class="modal fade" style="--bs-modal-width: 60%;" id="addExistingModifiers" tabindex="-1" role="dialog"
  aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered " role="document">
    <div class="modal-content">
      <div class="modal-header pb-0" style="border:none;">
        <h5 class="modal-title" id="exampleModalLabel">Select existing Modifiers</h5>
        <button type="button" class="close" data-bs-dismiss="modal" style="
    margin-left: auto;
    border: none;
    background: none;
" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <div class="form-group mb-2 w-50">
          <div class="input-group">
            <span>
              <img src="~/images/icons8-search-30.png" id="search-icon" alt="">
            </span>
          </div>
          <input type="text" class="form-control h-100" onkeyup="searchModifier()" id="searchModifier"
            placeholder="search*">
        </div>
        <div>
          <table class="table loadmodifiers"></table>
          <div class="d-flex align-items-center justify-content-end">
            <label for="" class="me-2">items per page:</label>
            <div class="dropdown mt-2 me-2">
              <select class="form-select form-select-lg mb-3 p-3" style="width: 80%;height: 50%;font-size: 0.7rem;"
                aria-label=".form-select-lg example">
                <option value="1" selected>1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="3">4</option>
                <option value="3">5</option>
                <option value="3">6</option>
              </select>
            </div>
            <div class="d-flex align-items-center">
              <label for="" class="me-2">Showing 1-5 of 13</label>
              <div class="d-flex mt-1">
                <button type="button"
                  class="btn btn-outline-dark btn2 w-100 h-75 d-flex align-items-center justify-content-center" style="
                                           padding: 6px;
                                       "><img src="" alt=""><img src="~/images/left-chevron-svgrepo-com.svg"
                    style="width:15px" alt=""></button>
                <button type="button"
                  class="btn btn-outline-dark btn2 mb-2 w-100 h-75 d-flex align-items-center justify-content-center"
                  style="
                                           padding: 5.8px;
                                       "><img src="~/images/left-chevron-svgrepo-com.svg"
                    style="width:15px;rotate: 180deg;" alt=""></button>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="modal-footer d-flex" style="border: none;">
        <div style="margin-right: auto;">
          <button type="submit" class="btn btn-primary" id="saveForAdd"
            onclick="addModifiersInNewMG(null)">Save</button>
          <button type="submit" class="btn btn-primary" id="saveForUpdate" onclick="addModifiersInNewMG(1)"
            style="display:none;">Save2</button>
          <button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal"
            onclick="cancelfromExistingModifiers()">Cancel</button>
        </div>
      </div>
    </div>
  </div>
</div>

<form id="deleteModifierGroupModal">
  <div class="modal fade" id="deleteModifiergroupModal" tabindex="-1" role="dialog"
    aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header" style="border:none;">
          <h5 class="modal-title" id="exampleModalLongTitle">Delete Confirmation</h5>
          <button type="button" class="close" style="margin-left: auto;border: none;background: none;"
            data-bs-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <input id="modifierGroupIdTodelete" type="hidden">
        <input id="modifierIdTodelete" type="hidden">
        <div class="modal-body d-flex flex-column align-items-center justify-content-center pb-0">
          <img src="~/images/icons8-alert-48.png" style="width:70px" class="mb-1" alt="">
          <label for="" id="deleteText"></label>
        </div>
        <div class="modal-footer d-flex align-items-center justify-content-center" style="border: none;">
          <button type="submit" class="btn btn-primary">Yes</button>
          <button type="button" class="btn btn-outline-primary" data-dismiss="modal">No</button>
        </div>
      </div>
    </div>
  </div>
</form>

<form id="deleteModifierForm">
  <div class="modal fade" id="deleteModifierModel" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header" style="border:none;">
          <h5 class="modal-title" id="exampleModalLongTitle">Delete Confirmation</h5>
          <button type="button" class="close" style="margin-left: auto;border: none;background: none;"
            data-bs-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <input id="modifierGroupIdTodelete" type="hidden">
        <input id="modifierIdTodelete" type="hidden">
        <div class="modal-body d-flex flex-column align-items-center justify-content-center pb-0">
          <img src="~/images/icons8-alert-48.png" style="width:70px" class="mb-1" alt="">
          <label for="" id="deleteModifierText"></label>
        </div>
        <div class="modal-footer d-flex align-items-center justify-content-center" style="border: none;">
          <button type="submit" class="btn btn-primary">Yes</button>
          <button type="button" class="btn btn-outline-primary" data-dismiss="modal">No</button>
        </div>
      </div>
    </div>
  </div>
</form>

<script>
  var selectedModifiers = [];

  function loadModifiers(id) {
    console.log(id);
    $.ajax({
      url: "/Menu/LoadAllModifiers",
      type: "GET",
      success: function (data) {
        $(".loadmodifiers").html(data);
        $(".modifier-img").hide();
        const modal = new bootstrap.Modal(document.getElementById('addExistingModifiers'));
        modal.show();

        if (id != null) {
          document.querySelector("h5").innerHTML = "Select Modifiers for Edit Modifier Group";
          $("#saveForUpdate").show();
          $("#saveForAdd").hide();
        }


        document.querySelectorAll(".IsModifierChecked").forEach((checkbox) => {
          const modifierId = parseInt(checkbox.value, 10);
          if (selectedModifiers.includes(modifierId)) {
            checkbox.checked = true;
          }
        });


        $('.loadmodifiers').find('td[data-lastcolumn=L]').remove();
      }
    });
  }


  function addModifiersInNewMG(id) {

    const modifierIds = [...document.querySelectorAll(".IsModifierChecked:checked")]
      .map(x => parseInt(x.value, 10));

    $.ajax({
      url: "/Menu/selectedModifiers",
      data: { modifierIds: modifierIds },
      type: "POST",
      success: function (data) {
        const modalEl = document.getElementById('addExistingModifiers');
        const modal = bootstrap.Modal.getInstance(modalEl);
        modal.hide();
        removeModalBackdrops();

        const targetModalId = id === null ? 'addModifierGroup1' : 'EditModifierGroup';
        const targetModal = new bootstrap.Modal(document.getElementById(targetModalId));
        targetModal.show();


        $(`#${targetModalId} .addedModifiers`).empty();
        selectedModifiers = modifierIds;

        data.modifiers.forEach((modifier) => {
          if (!$(`#modifier_${modifier.modifierid}`).length) {
            $(`#${targetModalId} .addedModifiers`).append(`
            <div id="modifier_${modifier.modifierid}">
              <span class="badge bg-white text-secondary me-2 mb-2 mt-2" style="border: 1px solid grey;">
                ${modifier.modifiername}
                <img src="/images/icons8-multiply-24.png" class="selectedModifiers" onclick="discardModifier(${modifier.modifierid})" style="width:10px;cursor:pointer;">
              </span>
              <input type="hidden" class="modifierId" value="${modifier.modifierid}" />
            </div>
          `);
          }
        });
      }
    });
  }

  function discardModifier(modifierId) {
    $(`#modifier_${modifierId}`).remove();
    selectedModifiers = selectedModifiers.filter(id => id !== modifierId);
  }

  function removeModalBackdrops() {
    document.querySelectorAll('.modal-backdrop').forEach(backdrop => backdrop.remove());
    document.body.classList.remove('modal-open');
  }


  function cancelfromExistingModifiers() {
    const editModalEl = document.getElementById('EditModifierGroup');
    const addModalEl = document.getElementById('addModifierGroup1');
    const targetModal = editModalEl ? new bootstrap.Modal(editModalEl) : new bootstrap.Modal(addModalEl);
    targetModal.show();
  }

  function cancelfromAddModifiers() {
    removeModalBackdrops();
  }


  function searchModifier() {
    const searchValue = $('#searchModifier').val();
    if (searchValue === "") {
      loadModifiers();
    } else {
      $.ajax({
        url: '@Url.Action("SearchModifier", "Menu")',
        method: 'GET',
        data: { searchedModifier: searchValue },
        success: function (data) {
          $('.loadmodifiers').html(data);
        }
      });
    }
  }

  $("#newModifierGroup").on('submit', function (e) {
    e.preventDefault();
    const data = new FormData(this);
    const payload = JSON.stringify(selectedModifiers);
    data.append("payload", payload);

    $.ajax({
      url: "/Menu/AddNewModifierGroup",
      type: "POST",
      data: data,
      contentType: false,
      processData: false,
      success: function () {
        removeModalBackdrops();
        loadModifierGroups();
      }
    });
  });


  function EditModifierGroupGet(modifierGroupId) {
    $.ajax({
      url: '/Menu/EditModifierGroupGet',
      type: 'GET',
      data: { modifierGroupId: modifierGroupId },
      success: function (data) {
        $('#LoadPartialOfmodifiergroup').html(data);
        const modal = new bootstrap.Modal(document.getElementById('EditModifierGroup'));
        modal.show();
        selectedModifiers = [...document.querySelectorAll(".modifierIdFromEdit")].map(x => parseInt(x.value, 10));
      },
      error: function () {
        alert("Failed to load the edit view.");
      }
    });
  }

  function openDeleteModifierModel(id) {
    $('#deleteModifiergroupModal').modal('show');
    document.getElementById("deleteText").innerHTML = "Are you sure you want to delete this modifiergroup?";
    $("#modifierGroupIdTodelete").val(id);
  }

  $("#deleteModifierGroupModal").on('submit', function (e) {
    e.preventDefault();
    const modifierGroupId = $("#modifierGroupIdTodelete").val();

    $.ajax({
      url: '/Menu/DeleteModifierGroup',
      type: 'POST',
      data: { modifierGroupId: modifierGroupId },
      success: function () {
        loadModifierGroups();
        removeModalBackdrops();
      }
    });
  });

  function OpenDeleteModifierModal(modifierId, modifiergroupId) {
    const modal = new bootstrap.Modal(document.getElementById('deleteModifierModel'));
    document.getElementById("deleteModifierText").innerText = "Are you sure you want to delete this modifier?";
    modal.show();
    document.getElementById("modifierIdTodelete").value = modifierId;
    document.getElementById("modifierGroupIdTodelete").value = modifiergroupId;
  }

  $("#deleteModifierForm").on('submit', function (e) {
    e.preventDefault();
    console.log("deleteing modifier..");
    const modifierid = document.getElementById("modifierIdTodelete").value;
    const modifiergroupid = document.getElementById("modifierGroupIdTodelete").value;
    $.ajax({
      url: '@Url.Action("DeleteModifier", "Menu")',
      method: 'POST',
      data: { modifierid: modifierid, modifiergroupid, modifiergroupid: modifiergroupid },
      success: function (data) {
    $('#deleteModifierModel').modal('hide');
    console.log("modal closed");
        loadModifiersForModifierGroup(modifiergroupid);
      }
    });
  })

  function OpenEditModifierModel(Modifierid,Modifiergroupid){
    $.ajax({
      url: '@Url.Action("EditmodifierGet", "Menu")',
      method : 'GET',
      data: { modifierid: Modifierid,modifierGroupId: Modifiergroupid },
      success: function (data) {
        $(".menubody").html(data);
       $('#addNewModifier').modal('show');
       $("#updateModifier").attr("style", "display:block");
       $("#saveNewModifier").attr("style", "display:none");
       document.getElementById("modifierIdForUpdate").value = Modifierid;
       console.log(Modifierid);
       document.querySelector("#addNewModifier h5").innerHTML = 'Edit Modifier';
      }
    })
  }

</script>
